# -*- coding: utf-8 -*-
"""data_preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VybdZXbLhGWejTly86YKggSmDcCPgCTJ
"""

import pandas as pd
import numpy as np
import math
import matplotlib.pyplot as plt

def extract_data_csv(file_name):
  df = pd.read_csv(file_name + ".csv")

  return df

def dataframe_fit():
  df = extract_data_csv("cpdata")
  label= pd.get_dummies(df.label).iloc[: , 1:]
  df= pd.concat([df,label],axis=1)
  df.drop('label', axis=1,inplace=True)

  return df

def see_boxplot_graph(df, x, y):
  df.boxplot(by =x, column =[y], grid = False)

def see_scatterplot_matrix(df, dimensions, class_):
  import plotly.express as px

  fig = px.scatter_matrix(df,
    dimensions= dimensions,
    color=class_)
  
  fig.show()

def remove_duplicates(df):
  df = df.drop_duplicates(keep=False)
  df = pd.DataFrame(df)

  return df

def replace_nan_values(df):
  df = df.apply(lambda x: x.fillna(x.mean()),axis=0)
  
  return df

def remove_outliers(df):
  for col in df.iloc[:, :4]:
    q_low = df[col].quantile(0.01)
    q_hi  = df[col].quantile(0.99)

    df_filtered = df[(df[col] < q_hi) & (df[col] > q_low)]
    df = pd.DataFrame(df_filtered)

  return df

def return_clean_dataframe(df=dataframe_fit()):
  df = replace_nan_values(df)
  df = remove_duplicates(df)
  df = remove_outliers(df)


  return df

df = return_clean_dataframe()
df.head(30)
#see_scatterplot_matrix(df, ["temperature", "humidity", "ph", "rainfall"], "rice")